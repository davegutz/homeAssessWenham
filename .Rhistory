smoothScatter(D$Total.Value ~ D$Fin.area
smoothScatter(D$Total.Value ~ D$Fin.area)
smoothScatter(D$Total.Value ~ D$Fin.area)
plot(Total.Value ~ Fin.area, data=D)
smoothScatter(D$Total.Value ~ D$Fin.area)
plot(Total.Value ~ Fin.area, data=D)
Ra <- D[D$Type=='RANCH', ]
Cp <- D[D$Type=='CAPE', ]
Co <- D[D$Type=='COLONIAL', ]
Sl <- D[D$Type=='SPLIT LEVL', ]
delete R
delete(R)
del(R)
rem(R)
help(delete)
??delete
??clear
rm(R)
plot(Total.Value ~ Fin.area, data=D)
plot(Total.Value ~ Lot.size, data=D)
Ra <- D[D$Type=='RANCH', ]
Cp <- D[D$Type=='CAPE', ]
Co <- D[D$Type=='COLONIAL', ]
Sl <- D[D$Type=='SPLIT LEVL', ]
plot(Total.Value ~ Fin.area, data=D)
plot(Total.Value ~ Lot.size, data=D)
plot(Total.Value ~ Fin.area, data=D)
plot(Total.Value ~ Lot.size, data=D)
plot(Total.Value ~ Fin.area, data=Ra)
plot(Total.Value ~ Lot.size, data=Ra)
# Real Estate analysis
# 15-Sep-2024
# SETUP ####
# load packages
library(lubridate)
library(readxl)
library(ggplot2)
library(tidyr)
library(effects)
library(dplyr)
library(zoo) # rollmean
# Import Data
D <- read.csv("all2000_20230127.csv")
D$Total.Value <- as.numeric(gsub("[$,]", "", D$Total.Value))
D <- D[!is.na(D$Fin.area), ]
D <- D[!is.na(D$Total.Value), ]
# Separate types
Ra <- D[D$Type=='RANCH', ]
Cp <- D[D$Type=='CAPE', ]
Co <- D[D$Type=='COLONIAL', ]
Sl <- D[D$Type=='SPLIT LEVL', ]
plot(Total.Value ~ Fin.area, data=D)
plot(Total.Value ~ Lot.size, data=D)
plot(Total.Value ~ Fin.area, data=Ra)
plot(Total.Value ~ Lot.size, data=Ra)
######### All
lm_faD <- lm(Total.Value ~ Fin.area, data = D)
summary(lm_faD)
plot(allEffects(lm_faD))
glm_Ra <- glm(Total.Value ~ Fin.area + Lot.size, family = gaussian, data = D)
summary(glm_faD)
lm_faD <- lm(Total.Value ~ Fin.area, data = D)
summary(lm_faD)
plot(allEffects(lm_faD))
glm_faD <- glm(Total.Value ~ Fin.area + Lot.size, family = gaussian, data = D)
summary(glm_faD)
plot(allEffects(glm_faD))
lm_faRa <- lm(Total.Value ~ Fin.area, data = Ra)
summary(lm_faRa)
plot(allEffects(lm_faRa))
glm_Ra <- glm(Total.Value ~ Fin.area + Lot.size, family = gaussian, data = Ra)
summary(glm_Ra)
plot(allEffects(glm_Ra))
new_fa = data.frame(Fin.area = c(0, 5000))
new_Ra = predict(lm_faRa, new_fa, type = "response")
lm_faCp <- lm(Total.Value ~ Fin.area, data = Cp)
summary(lm_faCp)
plot(allEffects(lm_faCp))
glm_Cp <- glm(Total.Value ~ Fin.area + Lot.size, family = gaussian, data = Cp)
summary(glm_Cp)
plot(allEffects(glm_Cp))
# Create an empty plot
plot(Ra$Fin.area, Ra$Total.Value, type = "n", xlim = c(0, 10000), ylim = c(0, 2000000),
xlab = "Finished Area, sqft", ylab = "Total Assesed Value, $", main = "Wenham Neighborhood 2000")
lines(Ra$Fin.area, Ra$Total.Value, type = "p", pch = 1, col = "red")
lines(new_fa, new_Ra, type = 'l', col="red")
lines(Cp$Fin.area, Cp$Total.Value, type = "p", pch = 2, col = "blue")
legend("topleft", legend = c("Ranches", "Capes"), col = c("red", "blue"), lty = 1)
lm_faRa <- lm(Total.Value ~ Fin.area, data = Ra)
summary(lm_faRa)
abline(lm(Total.Value ~ Fin.area, data = Ra))
plot(allEffects(glm_Ra))
abline(glm_Ra)
lm_faRa <- lm(Total.Value ~ Fin.area, data = Ra)
summary(lm_faRa)
plot(allEffects(lm_faRa))
#abline(lm(Total.Value ~ Fin.area, data = Ra))
abline(lm_faRa)
plot(allEffects(lm_faRa))
lm_faRa <- lm(Total.Value ~ Fin.area, data = Ra)
summary(lm_faRa)
plot(allEffects(lm_faRa))
abline(lm(Total.Value ~ Fin.area, data = Ra))
plot(Total.Value ~ Fin.area, data=Ra)
abline(lm_faRa)
plot(Ra$Fin.area, Ra$Total.Value, type = "n", xlim = c(0, 10000), ylim = c(0, 2000000),
xlab = "Finished Area, sqft", ylab = "Total Assesed Value, $", main = "Wenham Neighborhood 2000")
lines(Ra$Fin.area, Ra$Total.Value, type = "p", pch = 1, col = "red")
abline(lm_faRa)
#lines(new_fa, new_Ra, type = 'l', col="red")
lines(Cp$Fin.area, Cp$Total.Value, type = "p", pch = 2, col = "blue")
legend("topleft", legend = c("Ranches", "Capes"), col = c("red", "blue"), lty = 1)
abline(lm_faCp)
# Real Estate analysis
# 15-Sep-2024
# SETUP ####
# load packages
library(lubridate)
library(readxl)
library(ggplot2)
library(tidyr)
library(effects)
library(dplyr)
library(zoo) # rollmean
# Import Data
D <- read.csv("all2000_20230127.csv")
D$Total.Value <- as.numeric(gsub("[$,]", "", D$Total.Value))
D <- D[!is.na(D$Fin.area), ]
D <- D[!is.na(D$Total.Value), ]
# Separate types
Ra <- D[D$Type=='RANCH', ]
Cp <- D[D$Type=='CAPE', ]
Co <- D[D$Type=='COLONIAL', ]
Sl <- D[D$Type=='SPLIT LEVL', ]
plot(Total.Value ~ Fin.area, data=D)
plot(Total.Value ~ Lot.size, data=D)
plot(Total.Value ~ Fin.area, data=Ra)
plot(Total.Value ~ Lot.size, data=Ra)
######### All
lm_faD <- lm(Total.Value ~ Fin.area, data=D)
summary(lm_faD)
plot(allEffects(lm_faD))
glm_faD <- glm(Total.Value ~ Fin.area + Lot.size, family=gaussian, data=D)
summary(glm_faD)
plot(allEffects(glm_faD))
#newdata=data.frame(nickel=c(80, 90, 99, 100, 101, 110))
#predict(glm_nickel, newdata, type="response") # odds of getting migraine given levels of nickel intake (ug)
######### Ranch
lm_faRa <- lm(Total.Value ~ Fin.area, data=Ra)
summary(lm_faRa)
plot(allEffects(lm_faRa))
plot(Total.Value ~ Fin.area, data=Ra)
abline(lm_faRa)
glm_Ra <- glm(Total.Value ~ Fin.area + Lot.size, family=gaussian, data=Ra)
summary(glm_Ra)
plot(allEffects(glm_Ra))
new_fa=data.frame(Fin.area=c(0, 5000))
new_Ra=predict(lm_faRa, new_fa, type="response")
######### Cape
lm_faCp <- lm(Total.Value ~ Fin.area, data=Cp)
summary(lm_faCp)
plot(allEffects(lm_faCp))
glm_Cp <- glm(Total.Value ~ Fin.area + Lot.size, family=gaussian, data=Cp)
summary(glm_Cp)
plot(allEffects(glm_Cp))
#############Summarize
# Create an empty plot
plot(Ra$Fin.area, Ra$Total.Value, type="n", xlim=c(0, 10000), ylim=c(0, 2000000),
xlab="Finished Area, sqft", ylab="Total Assesed Value, $", main="Wenham Neighborhood 2000")
lines(Ra$Fin.area, Ra$Total.Value, type="p", pch=1, col="red")
abline(lm_faRa, col="red")
lines(Cp$Fin.area, Cp$Total.Value, type="p", pch=2, col="blue")
abline(lm_faCp, col="blue")
legend("topleft", legend=c("Ranches", "Capes"), col=c("red", "blue"), lty=1)
aline(allEffects(glm_Ra))
abline(allEffects(glm_Ra))
plot(Ra$Fin.area, Ra$Total.Value, type="n", xlim=c(0, 10000), ylim=c(0, 2000000),
xlab="Finished Area, sqft", ylab="Total Assesed Value, $", main="Wenham Neighborhood 2000")
lines(Ra$Fin.area, Ra$Total.Value, type="p", pch=1, col="red")
abline(allEffects(glm_Ra))
lines(Cp$Fin.area, Cp$Total.Value, type="p", pch=2, col="blue")
abline(lm_faCp, col="blue")
abline(lm_faRa, col="red")
abcline(glm_Cp)
glm_Ra <- glm(Total.Value ~ Fin.area + Lot.size + Beds + Baths, family=gaussian, data=Ra)
summary(glm_Ra)
plot(allEffects(glm_Ra))
glm_faD <- glm(Total.Value ~ Fin.area + Lot.size + Beds + Baths + Type, family=gaussian, data=D)
summary(glm_faD)
plot(allEffects(glm_faD))
glm_Ra <- glm(Total.Value ~ Fin.area + Lot.size + Beds + Baths, family=gaussian, data=Ra)
summary(glm_Ra)
plot(allEffects(glm_Ra))
glm_Cp <- glm(Total.Value ~ Fin.area + Lot.size + Beds + Baths, family=gaussian, data=Cp)
summary(glm_Cp)
plot(allEffects(glm_Cp))
plot(Ra$Fin.area, Ra$Total.Value, type="n", xlim=c(0, 10000), ylim=c(0, 2000000),
xlab="Finished Area, sqft", ylab="Total Assesed Value, $", main="Wenham Neighborhood 2000")
lines(Ra$Fin.area, Ra$Total.Value, type="p", pch=1, col="red")
abline(lm_faRa, col="red")
lines(Cp$Fin.area, Cp$Total.Value, type="p", pch=2, col="blue")
abline(lm_faCp, col="blue")
legend("topleft", legend=c("Ranches", "Capes"), col=c("red", "blue"), lty=1)
lm_faCo <- lm(Total.Value ~ Fin.area, data=Co)
summary(lm_faCo)
plot(allEffects(lm_faCo))
glm_Co <- glm(Total.Value ~ Fin.area + Lot.size + Beds + Baths, family=gaussian, data=Co)
summary(glm_Co)
plot(allEffects(glm_Co))
plot(Ra$Fin.area, Ra$Total.Value, type="n", xlim=c(0, 10000), ylim=c(0, 2000000),
xlab="Finished Area, sqft", ylab="Total Assesed Value, $", main="Wenham Neighborhood 2000")
lines(Ra$Fin.area, Ra$Total.Value, type="p", pch=1, col="red")
abline(lm_faRa, col="red")
lines(Cp$Fin.area, Cp$Total.Value, type="p", pch=2, col="blue")
abline(lm_faCp, col="blue")
lines(Co$Fin.area, Co$Total.Value, type="p", pch=3, col="green")
abline(lm_faCo, col="green")
legend("topleft", legend=c("Ranche", "Cape", "Colonial"), col=c("red", "blue", "green"), lty=1)
lm_faSl <- lm(Total.Value ~ Fin.area, data=Sl)
summary(lm_faSl)
plot(allEffects(lm_faSl))
glm_Sl <- glm(Total.Value ~ Fin.area + Lot.size + Beds + Baths, family=gaussian, data=Sl)
summary(glm_Sl)
plot(allEffects(glm_Sl))
glm_Sl <- glm(Total.Value ~ Fin.area + Lot.size + Beds + Baths, family=gaussian, data=Sl)
summary(glm_Sl)
plot(allEffects(glm_Sl))
plot(Ra$Fin.area, Ra$Total.Value, type="n", xlim=c(0, 10000), ylim=c(0, 2000000),
xlab="Finished Area, sqft", ylab="Total Assesed Value, $", main="Wenham Neighborhood 2000")
lines(Ra$Fin.area, Ra$Total.Value, type="p", pch=1, col="red")
abline(lm_faRa, col="red")
lines(Cp$Fin.area, Cp$Total.Value, type="p", pch=2, col="blue")
abline(lm_faCp, col="blue")
lines(Co$Fin.area, Co$Total.Value, type="p", pch=3, col="green")
abline(lm_faCo, col="green")
abline(lm_faSl, col="cyan")
legend("topleft", legend=c("Ranche", "Cape", "Colonial", "Split Level"), col=c("red", "blue", "green", "cyan"), lty=1)
plot(Ra$Fin.area, Ra$Total.Value, type="n", xlim=c(0, 10000), ylim=c(0, 2000000),
xlab="Finished Area, sqft", ylab="Total Assesed Value, $", main="Wenham Neighborhood 2000")
lines(Ra$Fin.area, Ra$Total.Value, type="p", pch=1, col="red")
abline(lm_faRa, col="red")
lines(Cp$Fin.area, Cp$Total.Value, type="p", pch=2, col="blue")
abline(lm_faCp, col="blue")
lines(Co$Fin.area, Co$Total.Value, type="p", pch=3, col="green")
abline(lm_faCo, col="green")
lines(Sl$Fin.area, Sl$Total.Value, type="p", pch=4, col="cyan")
abline(lm_faSl, col="cyan")
legend("topleft", legend=c("Ranche", "Cape", "Colonial", "Split Level"), col=c("red", "blue", "green", "cyan"), lty=1)
plot(Ra$Fin.area, Ra$Total.Value, type="n", xlim=c(0, 10000), ylim=c(0, 2000000),
xlab="Finished Area, sqft", ylab="Total Assesed Value, $", main="Wenham Neighborhood 2000")
lines(Ra$Fin.area, Ra$Total.Value, type="p", pch=1, col="red")
abline(lm_faRa, col="red")
lines(Cp$Fin.area, Cp$Total.Value, type="p", pch=2, col="blue")
abline(lm_faCp, col="blue")
lines(Co$Fin.area, Co$Total.Value, type="p", pch=3, col="green")
abline(lm_faCo, col="green")
lines(Sl$Fin.area, Sl$Total.Value, type="p", pch=4, col="black")
abline(lm_faSl, col="black")
legend("topleft", legend=c("Ranche", "Cape", "Colonial", "Split Level"), col=c("red", "blue", "green", "black"), lty=1)
plot(Ra$Fin.area, Ra$Total.Value, type="n", xlim=c(0, 6000), ylim=c(0, 1500000),
xlab="Finished Area, sqft", ylab="Total Assesed Value, $", main="Wenham Neighborhood 2000")
lines(Ra$Fin.area, Ra$Total.Value, type="p", pch=1, col="red")
abline(lm_faRa, col="red")
lines(Cp$Fin.area, Cp$Total.Value, type="p", pch=2, col="blue")
abline(lm_faCp, col="blue")
lines(Co$Fin.area, Co$Total.Value, type="p", pch=3, col="green")
abline(lm_faCo, col="green")
lines(Sl$Fin.area, Sl$Total.Value, type="p", pch=4, col="black")
abline(lm_faSl, col="black")
legend("topleft", legend=c("Ranche", "Cape", "Colonial", "Split Level"), col=c("red", "blue", "green", "black"), lty=1)
plot(Ra$Fin.area, Ra$Total.Value, type="n", xlim=c(500, 5500), ylim=c(0, 1500000),
xlab="Finished Area, sqft", ylab="Total Assesed Value, $", main="Wenham Neighborhood 2000")
lines(Ra$Fin.area, Ra$Total.Value, type="p", pch=1, col="red")
abline(lm_faRa, col="red")
lines(Cp$Fin.area, Cp$Total.Value, type="p", pch=2, col="blue")
abline(lm_faCp, col="blue")
lines(Co$Fin.area, Co$Total.Value, type="p", pch=3, col="green")
abline(lm_faCo, col="green")
lines(Sl$Fin.area, Sl$Total.Value, type="p", pch=4, col="black")
abline(lm_faSl, col="black")
legend("topleft", legend=c("Ranche", "Cape", "Colonial", "Split Level"), col=c("red", "blue", "green", "black"), lty=1)
plot(Ra$Fin.area, Ra$Total.Value, type="n", xlim=c(500, 5500), ylim=c(200000, 1200000),
xlab="Finished Area, sqft", ylab="Total Assesed Value, $", main="Wenham Neighborhood 2000")
lines(Ra$Fin.area, Ra$Total.Value, type="p", pch=1, col="red")
abline(lm_faRa, col="red")
lines(Cp$Fin.area, Cp$Total.Value, type="p", pch=2, col="blue")
abline(lm_faCp, col="blue")
lines(Co$Fin.area, Co$Total.Value, type="p", pch=3, col="green")
abline(lm_faCo, col="green")
lines(Sl$Fin.area, Sl$Total.Value, type="p", pch=4, col="black")
abline(lm_faSl, col="black")
legend("topleft", legend=c("Ranche", "Cape", "Colonial", "Split Level"), col=c("red", "blue", "green", "black"), lty=1)
plot(Ra$Fin.area, Ra$Total.Value, type="n", xlim=c(500, 5500), ylim=c(200000, 1200000),
xlab="Finished Area, sqft", ylab="Total Assesed Value, $", main="Wenham Neighborhood 2000")
lines(Ra$Fin.area, Ra$Total.Value, type="p", pch=1, col="red")
abline(lm_faRa, col="red")
lines(Cp$Fin.area, Cp$Total.Value, type="p", pch=2, col="blue")
abline(lm_faCp, col="blue")
lines(Co$Fin.area, Co$Total.Value, type="p", pch=3, col="green")
abline(lm_faCo, col="green")
lines(Sl$Fin.area, Sl$Total.Value, type="p", pch="S", col="black")
abline(lm_faSl, col="black")
legend("topleft", legend=c("Ranche", "Cape", "Colonial", "Split Level"), col=c("red", "blue", "green", "black"), lty=1)
# SETUP ####
# load packages
library(lubridate)
library(readxl)
library(ggplot2)
library(tidyr)
library(effects)
library(lubridate)
library(readxl)
library(ggplot2)
library(tidyr)
library(effects)
library(effects)
library(lubridate)
library(readxl)
library(ggplot2)
library(tidyr)
library(effects)
install.packages("effects")
install.packages("nloptr")
install.packages("effects")
library(dplyr)
library(zoo) # rollmean
# Import Data
D <- read.csv("wenham_fy24.csv")
D
D
D <- read.csv("wenham_fy24.csv", delimiter=';')
D <- read.csv("wenham_fy24.csv")
D
D$Total.Value <- as.numeric(gsub("[$,]", "", D$Total.Value))
D <- read.csv("wenham_fy24.csv")
D$Total.Value <- as.numeric(gsub("[$,]", "", D$Total.Value))
D <- read.csv("wenham_fy24.csv")
D$Type
Ra <- D[D$Type=='RANCH', ]
Cp <- D[D$Type=='CAPE', ]
Co <- D[D$Type=='COLONIAL', ]
Sl <- D[D$Type=='SPLIT LEVL', ]
plot(Value ~ Area, data=D)
plot(Value ~ Area, data=Ra)
plot(Value ~ Area, data=Cp)
plot(Value ~ Area, data=Co)
Co$Area
Co$Area[411]
Co$Address[411]
Co$ParcelID[411]
D <- read.csv("wenham_fy24.csv")
# Separate types
Ra <- D[D$Type=='RANCH', ]
Cp <- D[D$Type=='CAPE', ]
Co <- D[D$Type=='COLONIAL', ]
Sl <- D[D$Type=='SPLIT LEVL', ]
plot(Value ~ Area, data=Co)
plot(Value ~ Area, data=Sl)
plot(Value ~ Area, data=Cp)
plot(Value ~ Area, data=Ra)
Ra$Area
Ra$Area[1]
Ra$ParcelID[1]
D <- read.csv("wenham_fy24.csv")
# Separate types
Ra <- D[D$Type=='RANCH', ]
Cp <- D[D$Type=='CAPE', ]
Co <- D[D$Type=='COLONIAL', ]
Sl <- D[D$Type=='SPLIT LEVL', ]
plot(Value ~ Area, data=Ra)
D <- read.csv("wenham_fy24.csv")
# Separate types
Ra <- D[D$Type=='RANCH', ]
Cp <- D[D$Type=='CAPE', ]
Co <- D[D$Type=='COLONIAL', ]
Sl <- D[D$Type=='SPLIT LEVL', ]
plot(Value ~ Area, data=D)
plot(Value ~ Area, data=Ra)
plot(Value ~ Area, data=Sl)
plot(Value ~ Area, data=Bu)
Bu <- D[D$Type=='BUNGALOW', ]
Aq <- D[D$Type=='ANTIQUE', ]
Cv <- D[D$Type=='CONVENTONL', ]
Se <- D[D$Type=='SPLIT ENT', ]
Os <- D[D$Type=='OLD STYLE', ]
Cn <- D[D$Type=='CONDO', ]
Cy <- D[D$Type=='CONTEMPORY', ]
Es <- D[D$Type=='ESTATE', ]
plot(Value ~ Area, data=Bu)
plot(Value ~ Area, data=Aq)
plot(Value ~ Area, data=Cv)
plot(Value ~ Area, data=Se)
plot(Value ~ Area, data=Os)
plot(Value ~ Area, data=Cn)
plot(Value ~ Area, data=Cy)
plot(Value ~ Area, data=Es)
Cv$Area
Cv$ParcelID
Cv$Area[42]
Cv$ParcelID[42]
Os$Area
Os$Area[78]
Os$ParcelID[78]
D <- read.csv("wenham_fy24.csv")
# Separate types
Ra <- D[D$Type=='RANCH', ]
Cp <- D[D$Type=='CAPE', ]
Co <- D[D$Type=='COLONIAL', ]
Sl <- D[D$Type=='SPLIT LEVL', ]
Bu <- D[D$Type=='BUNGALOW', ]
Aq <- D[D$Type=='ANTIQUE', ]
Cv <- D[D$Type=='CONVENTONL', ]
Se <- D[D$Type=='SPLIT ENT', ]
Os <- D[D$Type=='OLD STYLE', ]
Cn <- D[D$Type=='CONDO', ]
Cy <- D[D$Type=='CONTEMPORY', ]
Es <- D[D$Type=='ESTATE', ]
plot(Value ~ Area, data=Cv)
plot(Value ~ Area, data=Os)
plot(Value ~ Area, data=Cy)
plot(Value ~ Area, data=Os)
Os$Value
Os$Value[77:78]
Os$Value[76:77]
Os$ParcelID[76:77]
D <- read.csv("wenham_fy24.csv")
# Separate types
Ra <- D[D$Type=='RANCH', ]
Cp <- D[D$Type=='CAPE', ]
Co <- D[D$Type=='COLONIAL', ]
Sl <- D[D$Type=='SPLIT LEVL', ]
Bu <- D[D$Type=='BUNGALOW', ]
Aq <- D[D$Type=='ANTIQUE', ]
Cv <- D[D$Type=='CONVENTONL', ]
Se <- D[D$Type=='SPLIT ENT', ]
Os <- D[D$Type=='OLD STYLE', ]
Cn <- D[D$Type=='CONDO', ]
Cy <- D[D$Type=='CONTEMPORY', ]
Es <- D[D$Type=='ESTATE', ]
plot(Value ~ Area, data=D)
plot(Value ~ Area, data=Ra)
plot(Value ~ Area, data=Cp)
plot(Value ~ Area, data=Co)
plot(Value ~ Area, data=Sl)
plot(Value ~ Area, data=Bu)
plot(Value ~ Area, data=Aq)
plot(Value ~ Area, data=Cv)
plot(Value ~ Area, data=Se)
plot(Value ~ Area, data=Os)
Os$Value
Os$Value[75]
Os$Value[73]
Os$ParcelID[73]
D <- read.csv("wenham_fy24.csv")
# Separate types
Ra <- D[D$Type=='RANCH', ]
Cp <- D[D$Type=='CAPE', ]
Co <- D[D$Type=='COLONIAL', ]
Sl <- D[D$Type=='SPLIT LEVL', ]
Bu <- D[D$Type=='BUNGALOW', ]
Aq <- D[D$Type=='ANTIQUE', ]
Cv <- D[D$Type=='CONVENTONL', ]
Se <- D[D$Type=='SPLIT ENT', ]
Os <- D[D$Type=='OLD STYLE', ]
Cn <- D[D$Type=='CONDO', ]
Cy <- D[D$Type=='CONTEMPORY', ]
Es <- D[D$Type=='ESTATE', ]
plot(Value ~ Area, data=D)
plot(Value ~ Area, data=Ra)
plot(Value ~ Area, data=Cp)
plot(Value ~ Area, data=Co)
plot(Value ~ Area, data=Sl)
plot(Value ~ Area, data=Bu)
plot(Value ~ Area, data=Aq)
plot(Value ~ Area, data=Cv)
plot(Value ~ Area, data=Se)
plot(Value ~ Area, data=Os)
plot(Value ~ Area, data=Cy)
plot(Value ~ Area, data=Es)
plot(Value ~ Area, data=Cn)
plot(Value ~ Area, data=Se)
plot(Value ~ Area, data=Cv)
lm_faD <- lm(Value ~ Area, data=D)
summary(lm_faD)
plot(allEffects(lm_faD))
glm_faD <- glm(Value ~ Area + Beds + Baths + Type, family=gaussian, data=D)
glm_faD <- glm(Value ~ Area + BD + BA + Type, family=gaussian, data=D)
summary(glm_faD)
plot(allEffects(glm_faD))
lm_faRa <- lm(Value ~ Area, data=Ra)
summary(lm_faRa)
plot(allEffects(lm_faRa))
plot(Value ~ Area, data=Ra)
abline(lm_faRa)
lm_faRa
plot(Value ~ Area, data=Ra)
abline(lm_faRa)
glm_Ra <- glm(Value ~ Area + BD + BA, family=gaussian, data=Ra)
summary(glm_Ra)
plot(allEffects(glm_Ra))
new_fa=data.frame(Area=c(0, 5000))
new_Ra=predict(lm_faRa, new_fa, type="response")
lm_faD <- lm(Value ~ Area, data=D)
summary(lm_faD)
plot(allEffects(lm_faD))
allEffects(lm_faD)
plot(lm_faD)
allEffects(lm_faD)
install.packages("effects")
lm_faD <- lm(Value ~ Area, data=D)
summary(lm_faD)
plot(allEffects(lm_faD))
