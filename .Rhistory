# make rolling average of values
# avg over past 2 days
mData$nickelAvg2 <- c(NA, rollmean(mData$nickel, 2, na.pad = FALSE, align = c("right")))
mData$timeAsleepAvg2 <- c(NA, rollmean(mData$time_asleep, 2, na.pad = FALSE, align = c("right")))
mData$totalScreenAvg2 <- c(NA, rollmean(mData$total_screen, 2, na.pad = FALSE, align = c("right")))
mData$fiberAvg2 <- c(NA, rollmean(mData$fiber, 2, na.pad = FALSE, align = c("right")))
mData$tyramineAvg2 <- c(NA, rollmean(mData$Tyramine, 2, na.pad = FALSE, align = c("right")))
mData$histamineAvg2 <- c(NA, rollmean(mData$Histamine, 2, na.pad = FALSE, align = c("right")))
mData$histamineSIGHIAvg2 <- c(NA, rollmean(mData$Histamine_SIGHI, 2, na.pad = FALSE, align = c("right")))
# avg over past 3 days
mData$nickelAvg3 <- c(NA, NA, rollmean(mData$nickel, 3, na.pad = FALSE, align = c("right")))
mData$timeAsleepAvg3 <- c(NA, NA, rollmean(mData$time_asleep, 3, na.pad = FALSE, align = c("right")))
mData$totalScreenAvg3 <- c(NA, NA, rollmean(mData$total_screen, 3, na.pad = FALSE, align = c("right")))
mData$fiberAvg3 <- c(NA, NA, rollmean(mData$fiber, 3, na.pad = FALSE, align = c("right")))
mData$tyramineAvg3 <- c(NA, NA, rollmean(mData$Tyramine, 3, na.pad = FALSE, align = c("right")))
mData$histamineAvg3 <- c(NA, NA, rollmean(mData$Histamine, 3, na.pad = FALSE, align = c("right")))
mData$histamineSIGHIAvg3 <- c(NA, NA, rollmean(mData$Histamine_SIGHI, 3, na.pad = FALSE, align = c("right")))
# lag
# 1) make lag
# screen time lad
mData$screenlag1 <- lag(mData$total_screen, n = 1L)
mData$screenlag2 <- lag(mData$total_screen, n = 2L)
mData$screenlag3 <- lag(mData$total_screen, n = 3L)
mData$screenlag4 <- lag(mData$total_screen, n = 4L)
mData$screenlag5 <- lag(mData$total_screen, n = 5L)
# NICKEL Lag
mData$nickellag1 <- lag(mData$nickel, n = 1L)
mData$nickellag2 <- lag(mData$nickel, n = 2L)
mData$nickellag3 <- lag(mData$nickel, n = 3L)
mData$nickellag4 <- lag(mData$nickel, n = 4L)
mData$nickellag5 <- lag(mData$nickel, n = 5L)
# FIBER Lag
mData$fiberlag1 <- lag(mData$fiber, n = 1L)
mData$fiberlag2 <- lag(mData$fiber, n = 2L)
mData$fiberlag3 <- lag(mData$fiber, n = 3L)
mData$fiberlag4 <- lag(mData$fiber, n = 4L)
mData$fiberlag5 <- lag(mData$fiber, n = 5L)
# TYRAMINE Lag
mData$tyraminelag1 <- lag(mData$Tyramine, n = 1L)
mData$tyraminelag2 <- lag(mData$Tyramine, n = 2L)
mData$tyraminelag3 <- lag(mData$Tyramine, n = 3L)
mData$tyraminelag4 <- lag(mData$Tyramine, n = 4L)
mData$tyraminelag5 <- lag(mData$Tyramine, n = 5L)
# Histamine Lag
mData$histaminelag1 <- lag(mData$Histamine, n = 1L)
mData$histaminelag2 <- lag(mData$Histamine, n = 2L)
mData$histaminelag3 <- lag(mData$Histamine, n = 3L)
mData$histaminelag4 <- lag(mData$Histamine, n = 4L)
mData$histaminelag5 <- lag(mData$Histamine, n = 5L)
# Histamine Lag SIGHI
mData$histamineSIGHIlag1 <- lag(mData$Histamine_SIGHI, n = 1L)
mData$histamineSIGHIlag2 <- lag(mData$Histamine_SIGHI, n = 2L)
mData$histamineSIGHIlag3 <- lag(mData$Histamine_SIGHI, n = 3L)
mData$histamineSIGHIlag4 <- lag(mData$Histamine_SIGHI, n = 4L)
mData$histamineSIGHIlag5 <- lag(mData$Histamine_SIGHI, n = 5L)
# PressureChange Lag (minMinusMax from day before)
mData$pressure_minMinusMaxYesterday_lag1 <- lag(mData$pressure_minMinusMaxYesterday, n = 1L)
example("plot")
par
op
plot(D$Fin.area ~ D$Total.Value)
D <- D[!is.na(D$Fin.area), ]
D <- D[!is.na(D$Total.value), ]
Ra <- D[D$Type=='RANCH', ]
Cp <- D[D$Type=='CAPE', ]
Co <- D[D$Type=='COLONIAL', ]
Sl <- D[D$Type=='SPLIT LEVL', ]
plot(D$Fin.area ~ D$Total.Value)
ggplot(data=D, aes(x=Fin.area, y = value, group = measure, color = measure)) +
geom_line()
plot(Fin.area ~ Total.Value, Data=D)
plot(Fin.area ~ Total.Value, data=D)
plot(Fin.area ~ Total.Value, data=D, xlim=[0, 5000])
plot(Fin.area ~ Total.Value, data=D, xlim=(0, 5000))
plot(Fin.area ~ Total.Value, data=D, xmin=0, xmax=5000)
smoothScatter(D$Fin.area ~ D$Total.Value)
smoothScatter(D$Fin.area ~ D$Total.Value, xlim=(0, 5000))
smoothScatter(D$Fin.area ~ D$Total.Value, xlim={0, 5000})
smoothScatter(D$Fin.area ~ D$Total.Value, xlim=[0 5000])
smoothScatter(D$Fin.area ~ D$Total.Value, xlim=0 5000)
smoothScatter(D$Fin.area ~ D$Total.Value, xlim=(0, 5000) )
smoothScatter(D$Fin.area ~ D$Total.Value, xlim(0, 5000) )
D <- read.csv("all2000_20230127.csv")
head(D)
D[!is.na(D$Fin.area), ]
D <- read.csv("all2000_20230127.csv")
D <- D[!is.na(D$Fin.area), ]
D <- D[!is.na(D$Total.value), ]
D <- read.csv("all2000_20230127.csv")
D <- D[!is.na(D$Fin.area), ]
D$Total.Value <- as.numeric(D$Total.Value)
D$Total.Value
D <- read.csv("all2000_20230127.csv")
head(D)
str(D)
# drop na data
D <- D[!is.na(D$Fin.area), ]
D$Total.Value
as.numeric(D$Total.Value)
as.numeric("737,400.00")
class(D$Total.Value)
as.numeric(c("-.1"," 2.7 ","B"))
as.numeric("737,400.00")
as.numeric("737400.00")
D$Total.Value <- replace(D$Total.Value, ',', '')
D$Total.Value <- replace(D$Total.Value, ",", "")
D <- read.csv("all2000_20230127.csv")
head(D)
str(D)
# drop na data
D <- D[!is.na(D$Fin.area), ]
replace(D$Total.Value, ",", "")
replace(D$Total.Value, (","), ("")
)
replace(D$Total.Value, (","), (""))
replace(D$Total.Value, ("$"), (""))
gsub(",", "", D$Total.Value)
gsub("$", "", D$Total.Value)
gsub("\$", "", D$Total.Value)
gsub("$", "", D$Total.Value)
gsub(",", "", D$Total.Value)
D$Total.Value <- gsub(",", "", D$Total.Value)
gsub("$", "", D$Total.Value)
str_replace_all(D$Total.Value, "$", "")
string::str_replace_all(D$Total.Value, "$", "")
stringr::str_replace_all(D$Total.Value, "$", "")
sub(D$Total.Value, "$", "")
sub("$", "", D$Total.Value)
sub("\$", "", D$Total.Value)
sub(\$, "", D$Total.Value)
sub('\$', "", D$Total.Value)
sub('$', "", D$Total.Value)
sub('$', "X", D$Total.Value)
sub('\$', "X", D$Total.Value)
gsub('\$', "X", D$Total.Value)
gsub('$', "X", D$Total.Value)
gsub("[$,]", "", D$Total.Value)
D$Total.Value <- as.numeric(gsub("[$,]", "", D$Total.Value))
plot(Fin.area ~ Total.Value, data=D, xmin=0, xmax=5000)
plot(Fin.area ~ Total.Value, data=D)
smoothScatter(D$Fin.area ~ D$Total.Value, xlim(0, 5000) )
plot(Fin.area ~ Total.Value, data=D)
plot(Fin.area ~ Total.Value, data=D)
gsub("[$,]", "", D$Total.Value)
plot(Fin.area ~ Total.Value, data=D)
plot(Total.Value ~ Fin.area, data=D)
smoothScatter(D$Total.Value ~ D$Fin.area, xlim(0, 5000) )
plot(Total.Value ~ Fin.area, data=D)
plot(Total.Value ~ Fin.area, data=D, xlim(0, 5000))
plot(Total.Value ~ Fin.area, data=D, xlim(0, 5000))
plot(Total.Value ~ Fin.area, data=D, xlim(0, 5000))
D$Fin.area
D$Total.Value
D <- D[!is.na(D$Total.Value), ]
plot(Total.Value ~ Fin.area, data=D, xlim(0, 5000))
plot(Total.Value ~ Fin.area, data=D
plot(Total.Value ~ Fin.area, data=D)
plot(Total.Value ~ Fin.area, data=D)
smoothScatter(D$Total.Value ~ D$Fin.area, xlim(0, 5000) )
D <- read.csv("all2000_20230127.csv")
# drop na data
D$Total.Value <- as.numeric(gsub("[$,]", "", D$Total.Value))
D <- D[!is.na(D$Fin.area), ]
D <- D[!is.na(D$Total.Value), ]
smoothScatter(D$Total.Value ~ D$Fin.area, xlim(0, 5000) )
D$Total.Value
D$Fin.area
D <- read.csv("all2000_20230127.csv")
# drop na data
D$Total.Value <- as.numeric(gsub("[$,]", "", D$Total.Value))
D$Fin.area
D$Total.Value
D[!is.na(D$Fin.area), ]
D[is.na(D$Fin.area), ]
D[is.na(D$Total.Value), ]
D <- read.csv("all2000_20230127.csv")
D$Total.Value <- as.numeric(gsub("[$,]", "", D$Total.Value))
D <- D[!is.na(D$Fin.area), ]
D
D$Fin.area
size(D)
length(D)
D.size
D.size()
D <- read.csv("all2000_20230127.csv")
D$Total.Value <- as.numeric(gsub("[$,]", "", D$Total.Value))
D <- D[!is.na(D$Fin.area), ]
D <- D[!is.na(D$Total.Value), ]
length(D$Total.Value)
length(D$Fin.area)
[D$Fin.area D$Total.Value
[D$Fin.area D$Total.Value]
(D$Fin.area D$Total.Value)
(D$Fin.area, D$Total.Value)
D$Total.Value
D$Fin.area
smoothScatter(D$Total.Value ~ D$Fin.area
smoothScatter(D$Total.Value ~ D$Fin.area)
smoothScatter(D$Total.Value ~ D$Fin.area)
plot(Total.Value ~ Fin.area, data=D)
smoothScatter(D$Total.Value ~ D$Fin.area)
plot(Total.Value ~ Fin.area, data=D)
Ra <- D[D$Type=='RANCH', ]
Cp <- D[D$Type=='CAPE', ]
Co <- D[D$Type=='COLONIAL', ]
Sl <- D[D$Type=='SPLIT LEVL', ]
delete R
delete(R)
del(R)
rem(R)
help(delete)
??delete
??clear
rm(R)
plot(Total.Value ~ Fin.area, data=D)
plot(Total.Value ~ Lot.size, data=D)
Ra <- D[D$Type=='RANCH', ]
Cp <- D[D$Type=='CAPE', ]
Co <- D[D$Type=='COLONIAL', ]
Sl <- D[D$Type=='SPLIT LEVL', ]
plot(Total.Value ~ Fin.area, data=D)
plot(Total.Value ~ Lot.size, data=D)
plot(Total.Value ~ Fin.area, data=D)
plot(Total.Value ~ Lot.size, data=D)
plot(Total.Value ~ Fin.area, data=Ra)
plot(Total.Value ~ Lot.size, data=Ra)
# Real Estate analysis
# 15-Sep-2024
# SETUP ####
# load packages
library(lubridate)
library(readxl)
library(ggplot2)
library(tidyr)
library(effects)
library(dplyr)
library(zoo) # rollmean
# Import Data
D <- read.csv("all2000_20230127.csv")
D$Total.Value <- as.numeric(gsub("[$,]", "", D$Total.Value))
D <- D[!is.na(D$Fin.area), ]
D <- D[!is.na(D$Total.Value), ]
# Separate types
Ra <- D[D$Type=='RANCH', ]
Cp <- D[D$Type=='CAPE', ]
Co <- D[D$Type=='COLONIAL', ]
Sl <- D[D$Type=='SPLIT LEVL', ]
plot(Total.Value ~ Fin.area, data=D)
plot(Total.Value ~ Lot.size, data=D)
plot(Total.Value ~ Fin.area, data=Ra)
plot(Total.Value ~ Lot.size, data=Ra)
######### All
lm_faD <- lm(Total.Value ~ Fin.area, data = D)
summary(lm_faD)
plot(allEffects(lm_faD))
glm_Ra <- glm(Total.Value ~ Fin.area + Lot.size, family = gaussian, data = D)
summary(glm_faD)
lm_faD <- lm(Total.Value ~ Fin.area, data = D)
summary(lm_faD)
plot(allEffects(lm_faD))
glm_faD <- glm(Total.Value ~ Fin.area + Lot.size, family = gaussian, data = D)
summary(glm_faD)
plot(allEffects(glm_faD))
lm_faRa <- lm(Total.Value ~ Fin.area, data = Ra)
summary(lm_faRa)
plot(allEffects(lm_faRa))
glm_Ra <- glm(Total.Value ~ Fin.area + Lot.size, family = gaussian, data = Ra)
summary(glm_Ra)
plot(allEffects(glm_Ra))
new_fa = data.frame(Fin.area = c(0, 5000))
new_Ra = predict(lm_faRa, new_fa, type = "response")
lm_faCp <- lm(Total.Value ~ Fin.area, data = Cp)
summary(lm_faCp)
plot(allEffects(lm_faCp))
glm_Cp <- glm(Total.Value ~ Fin.area + Lot.size, family = gaussian, data = Cp)
summary(glm_Cp)
plot(allEffects(glm_Cp))
# Create an empty plot
plot(Ra$Fin.area, Ra$Total.Value, type = "n", xlim = c(0, 10000), ylim = c(0, 2000000),
xlab = "Finished Area, sqft", ylab = "Total Assesed Value, $", main = "Wenham Neighborhood 2000")
lines(Ra$Fin.area, Ra$Total.Value, type = "p", pch = 1, col = "red")
lines(new_fa, new_Ra, type = 'l', col="red")
lines(Cp$Fin.area, Cp$Total.Value, type = "p", pch = 2, col = "blue")
legend("topleft", legend = c("Ranches", "Capes"), col = c("red", "blue"), lty = 1)
lm_faRa <- lm(Total.Value ~ Fin.area, data = Ra)
summary(lm_faRa)
abline(lm(Total.Value ~ Fin.area, data = Ra))
plot(allEffects(glm_Ra))
abline(glm_Ra)
lm_faRa <- lm(Total.Value ~ Fin.area, data = Ra)
summary(lm_faRa)
plot(allEffects(lm_faRa))
#abline(lm(Total.Value ~ Fin.area, data = Ra))
abline(lm_faRa)
plot(allEffects(lm_faRa))
lm_faRa <- lm(Total.Value ~ Fin.area, data = Ra)
summary(lm_faRa)
plot(allEffects(lm_faRa))
abline(lm(Total.Value ~ Fin.area, data = Ra))
plot(Total.Value ~ Fin.area, data=Ra)
abline(lm_faRa)
plot(Ra$Fin.area, Ra$Total.Value, type = "n", xlim = c(0, 10000), ylim = c(0, 2000000),
xlab = "Finished Area, sqft", ylab = "Total Assesed Value, $", main = "Wenham Neighborhood 2000")
lines(Ra$Fin.area, Ra$Total.Value, type = "p", pch = 1, col = "red")
abline(lm_faRa)
#lines(new_fa, new_Ra, type = 'l', col="red")
lines(Cp$Fin.area, Cp$Total.Value, type = "p", pch = 2, col = "blue")
legend("topleft", legend = c("Ranches", "Capes"), col = c("red", "blue"), lty = 1)
abline(lm_faCp)
# Real Estate analysis
# 15-Sep-2024
# SETUP ####
# load packages
library(lubridate)
library(readxl)
library(ggplot2)
library(tidyr)
library(effects)
library(dplyr)
library(zoo) # rollmean
# Import Data
D <- read.csv("all2000_20230127.csv")
D$Total.Value <- as.numeric(gsub("[$,]", "", D$Total.Value))
D <- D[!is.na(D$Fin.area), ]
D <- D[!is.na(D$Total.Value), ]
# Separate types
Ra <- D[D$Type=='RANCH', ]
Cp <- D[D$Type=='CAPE', ]
Co <- D[D$Type=='COLONIAL', ]
Sl <- D[D$Type=='SPLIT LEVL', ]
plot(Total.Value ~ Fin.area, data=D)
plot(Total.Value ~ Lot.size, data=D)
plot(Total.Value ~ Fin.area, data=Ra)
plot(Total.Value ~ Lot.size, data=Ra)
######### All
lm_faD <- lm(Total.Value ~ Fin.area, data=D)
summary(lm_faD)
plot(allEffects(lm_faD))
glm_faD <- glm(Total.Value ~ Fin.area + Lot.size, family=gaussian, data=D)
summary(glm_faD)
plot(allEffects(glm_faD))
#newdata=data.frame(nickel=c(80, 90, 99, 100, 101, 110))
#predict(glm_nickel, newdata, type="response") # odds of getting migraine given levels of nickel intake (ug)
######### Ranch
lm_faRa <- lm(Total.Value ~ Fin.area, data=Ra)
summary(lm_faRa)
plot(allEffects(lm_faRa))
plot(Total.Value ~ Fin.area, data=Ra)
abline(lm_faRa)
glm_Ra <- glm(Total.Value ~ Fin.area + Lot.size, family=gaussian, data=Ra)
summary(glm_Ra)
plot(allEffects(glm_Ra))
new_fa=data.frame(Fin.area=c(0, 5000))
new_Ra=predict(lm_faRa, new_fa, type="response")
######### Cape
lm_faCp <- lm(Total.Value ~ Fin.area, data=Cp)
summary(lm_faCp)
plot(allEffects(lm_faCp))
glm_Cp <- glm(Total.Value ~ Fin.area + Lot.size, family=gaussian, data=Cp)
summary(glm_Cp)
plot(allEffects(glm_Cp))
#############Summarize
# Create an empty plot
plot(Ra$Fin.area, Ra$Total.Value, type="n", xlim=c(0, 10000), ylim=c(0, 2000000),
xlab="Finished Area, sqft", ylab="Total Assesed Value, $", main="Wenham Neighborhood 2000")
lines(Ra$Fin.area, Ra$Total.Value, type="p", pch=1, col="red")
abline(lm_faRa, col="red")
lines(Cp$Fin.area, Cp$Total.Value, type="p", pch=2, col="blue")
abline(lm_faCp, col="blue")
legend("topleft", legend=c("Ranches", "Capes"), col=c("red", "blue"), lty=1)
aline(allEffects(glm_Ra))
abline(allEffects(glm_Ra))
plot(Ra$Fin.area, Ra$Total.Value, type="n", xlim=c(0, 10000), ylim=c(0, 2000000),
xlab="Finished Area, sqft", ylab="Total Assesed Value, $", main="Wenham Neighborhood 2000")
lines(Ra$Fin.area, Ra$Total.Value, type="p", pch=1, col="red")
abline(allEffects(glm_Ra))
lines(Cp$Fin.area, Cp$Total.Value, type="p", pch=2, col="blue")
abline(lm_faCp, col="blue")
abline(lm_faRa, col="red")
abcline(glm_Cp)
glm_Ra <- glm(Total.Value ~ Fin.area + Lot.size + Beds + Baths, family=gaussian, data=Ra)
summary(glm_Ra)
plot(allEffects(glm_Ra))
glm_faD <- glm(Total.Value ~ Fin.area + Lot.size + Beds + Baths + Type, family=gaussian, data=D)
summary(glm_faD)
plot(allEffects(glm_faD))
glm_Ra <- glm(Total.Value ~ Fin.area + Lot.size + Beds + Baths, family=gaussian, data=Ra)
summary(glm_Ra)
plot(allEffects(glm_Ra))
glm_Cp <- glm(Total.Value ~ Fin.area + Lot.size + Beds + Baths, family=gaussian, data=Cp)
summary(glm_Cp)
plot(allEffects(glm_Cp))
plot(Ra$Fin.area, Ra$Total.Value, type="n", xlim=c(0, 10000), ylim=c(0, 2000000),
xlab="Finished Area, sqft", ylab="Total Assesed Value, $", main="Wenham Neighborhood 2000")
lines(Ra$Fin.area, Ra$Total.Value, type="p", pch=1, col="red")
abline(lm_faRa, col="red")
lines(Cp$Fin.area, Cp$Total.Value, type="p", pch=2, col="blue")
abline(lm_faCp, col="blue")
legend("topleft", legend=c("Ranches", "Capes"), col=c("red", "blue"), lty=1)
lm_faCo <- lm(Total.Value ~ Fin.area, data=Co)
summary(lm_faCo)
plot(allEffects(lm_faCo))
glm_Co <- glm(Total.Value ~ Fin.area + Lot.size + Beds + Baths, family=gaussian, data=Co)
summary(glm_Co)
plot(allEffects(glm_Co))
plot(Ra$Fin.area, Ra$Total.Value, type="n", xlim=c(0, 10000), ylim=c(0, 2000000),
xlab="Finished Area, sqft", ylab="Total Assesed Value, $", main="Wenham Neighborhood 2000")
lines(Ra$Fin.area, Ra$Total.Value, type="p", pch=1, col="red")
abline(lm_faRa, col="red")
lines(Cp$Fin.area, Cp$Total.Value, type="p", pch=2, col="blue")
abline(lm_faCp, col="blue")
lines(Co$Fin.area, Co$Total.Value, type="p", pch=3, col="green")
abline(lm_faCo, col="green")
legend("topleft", legend=c("Ranche", "Cape", "Colonial"), col=c("red", "blue", "green"), lty=1)
lm_faSl <- lm(Total.Value ~ Fin.area, data=Sl)
summary(lm_faSl)
plot(allEffects(lm_faSl))
glm_Sl <- glm(Total.Value ~ Fin.area + Lot.size + Beds + Baths, family=gaussian, data=Sl)
summary(glm_Sl)
plot(allEffects(glm_Sl))
glm_Sl <- glm(Total.Value ~ Fin.area + Lot.size + Beds + Baths, family=gaussian, data=Sl)
summary(glm_Sl)
plot(allEffects(glm_Sl))
plot(Ra$Fin.area, Ra$Total.Value, type="n", xlim=c(0, 10000), ylim=c(0, 2000000),
xlab="Finished Area, sqft", ylab="Total Assesed Value, $", main="Wenham Neighborhood 2000")
lines(Ra$Fin.area, Ra$Total.Value, type="p", pch=1, col="red")
abline(lm_faRa, col="red")
lines(Cp$Fin.area, Cp$Total.Value, type="p", pch=2, col="blue")
abline(lm_faCp, col="blue")
lines(Co$Fin.area, Co$Total.Value, type="p", pch=3, col="green")
abline(lm_faCo, col="green")
abline(lm_faSl, col="cyan")
legend("topleft", legend=c("Ranche", "Cape", "Colonial", "Split Level"), col=c("red", "blue", "green", "cyan"), lty=1)
plot(Ra$Fin.area, Ra$Total.Value, type="n", xlim=c(0, 10000), ylim=c(0, 2000000),
xlab="Finished Area, sqft", ylab="Total Assesed Value, $", main="Wenham Neighborhood 2000")
lines(Ra$Fin.area, Ra$Total.Value, type="p", pch=1, col="red")
abline(lm_faRa, col="red")
lines(Cp$Fin.area, Cp$Total.Value, type="p", pch=2, col="blue")
abline(lm_faCp, col="blue")
lines(Co$Fin.area, Co$Total.Value, type="p", pch=3, col="green")
abline(lm_faCo, col="green")
lines(Sl$Fin.area, Sl$Total.Value, type="p", pch=4, col="cyan")
abline(lm_faSl, col="cyan")
legend("topleft", legend=c("Ranche", "Cape", "Colonial", "Split Level"), col=c("red", "blue", "green", "cyan"), lty=1)
plot(Ra$Fin.area, Ra$Total.Value, type="n", xlim=c(0, 10000), ylim=c(0, 2000000),
xlab="Finished Area, sqft", ylab="Total Assesed Value, $", main="Wenham Neighborhood 2000")
lines(Ra$Fin.area, Ra$Total.Value, type="p", pch=1, col="red")
abline(lm_faRa, col="red")
lines(Cp$Fin.area, Cp$Total.Value, type="p", pch=2, col="blue")
abline(lm_faCp, col="blue")
lines(Co$Fin.area, Co$Total.Value, type="p", pch=3, col="green")
abline(lm_faCo, col="green")
lines(Sl$Fin.area, Sl$Total.Value, type="p", pch=4, col="black")
abline(lm_faSl, col="black")
legend("topleft", legend=c("Ranche", "Cape", "Colonial", "Split Level"), col=c("red", "blue", "green", "black"), lty=1)
plot(Ra$Fin.area, Ra$Total.Value, type="n", xlim=c(0, 6000), ylim=c(0, 1500000),
xlab="Finished Area, sqft", ylab="Total Assesed Value, $", main="Wenham Neighborhood 2000")
lines(Ra$Fin.area, Ra$Total.Value, type="p", pch=1, col="red")
abline(lm_faRa, col="red")
lines(Cp$Fin.area, Cp$Total.Value, type="p", pch=2, col="blue")
abline(lm_faCp, col="blue")
lines(Co$Fin.area, Co$Total.Value, type="p", pch=3, col="green")
abline(lm_faCo, col="green")
lines(Sl$Fin.area, Sl$Total.Value, type="p", pch=4, col="black")
abline(lm_faSl, col="black")
legend("topleft", legend=c("Ranche", "Cape", "Colonial", "Split Level"), col=c("red", "blue", "green", "black"), lty=1)
plot(Ra$Fin.area, Ra$Total.Value, type="n", xlim=c(500, 5500), ylim=c(0, 1500000),
xlab="Finished Area, sqft", ylab="Total Assesed Value, $", main="Wenham Neighborhood 2000")
lines(Ra$Fin.area, Ra$Total.Value, type="p", pch=1, col="red")
abline(lm_faRa, col="red")
lines(Cp$Fin.area, Cp$Total.Value, type="p", pch=2, col="blue")
abline(lm_faCp, col="blue")
lines(Co$Fin.area, Co$Total.Value, type="p", pch=3, col="green")
abline(lm_faCo, col="green")
lines(Sl$Fin.area, Sl$Total.Value, type="p", pch=4, col="black")
abline(lm_faSl, col="black")
legend("topleft", legend=c("Ranche", "Cape", "Colonial", "Split Level"), col=c("red", "blue", "green", "black"), lty=1)
plot(Ra$Fin.area, Ra$Total.Value, type="n", xlim=c(500, 5500), ylim=c(200000, 1200000),
xlab="Finished Area, sqft", ylab="Total Assesed Value, $", main="Wenham Neighborhood 2000")
lines(Ra$Fin.area, Ra$Total.Value, type="p", pch=1, col="red")
abline(lm_faRa, col="red")
lines(Cp$Fin.area, Cp$Total.Value, type="p", pch=2, col="blue")
abline(lm_faCp, col="blue")
lines(Co$Fin.area, Co$Total.Value, type="p", pch=3, col="green")
abline(lm_faCo, col="green")
lines(Sl$Fin.area, Sl$Total.Value, type="p", pch=4, col="black")
abline(lm_faSl, col="black")
legend("topleft", legend=c("Ranche", "Cape", "Colonial", "Split Level"), col=c("red", "blue", "green", "black"), lty=1)
plot(Ra$Fin.area, Ra$Total.Value, type="n", xlim=c(500, 5500), ylim=c(200000, 1200000),
xlab="Finished Area, sqft", ylab="Total Assesed Value, $", main="Wenham Neighborhood 2000")
lines(Ra$Fin.area, Ra$Total.Value, type="p", pch=1, col="red")
abline(lm_faRa, col="red")
lines(Cp$Fin.area, Cp$Total.Value, type="p", pch=2, col="blue")
abline(lm_faCp, col="blue")
lines(Co$Fin.area, Co$Total.Value, type="p", pch=3, col="green")
abline(lm_faCo, col="green")
lines(Sl$Fin.area, Sl$Total.Value, type="p", pch="S", col="black")
abline(lm_faSl, col="black")
legend("topleft", legend=c("Ranche", "Cape", "Colonial", "Split Level"), col=c("red", "blue", "green", "black"), lty=1)
# SETUP ####
# load packages
library(lubridate)
library(readxl)
library(ggplot2)
library(tidyr)
library(effects)
library(lubridate)
library(readxl)
library(ggplot2)
library(tidyr)
library(effects)
library(effects)
